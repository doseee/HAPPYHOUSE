<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.happyhouse.user.model.mapper.UserMapper">

	<resultMap type="UserDto" id="user">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
	</resultMap>
	
	<resultMap type="UserDto" id="userAll" extends="user">
		<result column="user_password" property="userPwd"/>
		<result column="user_tel" property="userTel"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_address" property="userAddress"/>
		<result column="join_date" property="joinDate"/>
	</resultMap>	

	<select id="idCheck" parameterType="string" resultType="int">
		select count(user_id)
		from users
		where user_id = #{userId}
	</select>

	<insert id="joinUser" parameterType="UserDto">
		insert into users (user_name, user_id, user_password, user_tel, user_email, user_address, join_date)
		values (#{userName}, #{userId}, #{userPwd}, #{userTel}, #{userEmail}, #{userAddress}, now())
	</insert>

	<select id="loginUser" parameterType="UserDto" resultMap="user">
		select user_id, user_name
		from users
		where user_id = #{userId} and user_password = #{userPwd}
	</select>
	
	<select id="listMember" resultMap="userAll">
		select user_name, user_id, user_password, email_id, email_domain, join_date
		from members
		order by join_date
	</select>
	
	<select id="getUser" parameterType="string" resultMap="userAll">
		select user_name, user_id, user_password, user_tel, user_email, user_address, join_date
		from users
		where user_id = #{userId}
	</select>
	
	<select id="findPwd" parameterType="string" resultType="string">
		select user_password
		from users
		where user_id = #{userId}
	</select>
	
	<update id="makePwd" parameterType="map">
		update users
		set user_password = #{newPass}
		where user_id = #{userId}
	</update>
	
	<update id="updateUser" parameterType="UserDto">
		update users
		set user_address = #{userAddress}, user_email = #{userEmail}  
		where user_id = #{userId}
	</update>
	
	<delete id="deleteUser" parameterType="string">
		delete from users
		where user_id = #{userId}
	</delete>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from users
		where user_id = #{userId}
	</select>
	
	<update id="saveRefreshToken" parameterType="map">
		update users
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<update id="deleteRefreshToken" parameterType="map">
		update users
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
</mapper>